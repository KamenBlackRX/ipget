#!/bin/bash

OUT_C='-e'
#ECHO COLORS
G_OUT='\e[92m'
R_OUT='\e[31m'
B_OUT='\e[34m'

DEFAULT='\e[39m'
END_F='\e[0m'

#PRINTF COLORS
RED='\x1b[31m'
GREEN="\x1b[32m"
BLUE="\x1b[34m"
CLEAR='\x1b[0m'

#Formated outputs 
function OK_OUT ()
{
	printf "%10s %b [ OK ]%b \n\r" "" "$GREEN" "$CLEAR"
}

function FAIL_OUT ()
{
	printf "%10s %b[ FAIL ] %b \n" "" "$RED" "$CLEAR ";
}

printf "Configuring for compilation...\n"
printf "Detecting libs:\n";

printf "ifaddrs: "

if [ -f "/usr/include/ifaddrs.h" ]; then 
#DEPRECIETED -> printf "%10s %s [ OK  ] %s \n" "$GREEN" "$CLEAR";
#	sleep 1
	OK_OUT;

else
#DEPRECIETED -> printf "%b[ !!! FAIL !!! ] %b \n" "$RED" "$CLEAR ";
	FAIL_OUT;

fi;

printf "if.h: "
if [ -f "/usr/include/net/if.h" ]; then
#       sleep 1
       OK_OUT;
else
      FAIL_OUT;

fi;

printf "inet.h: "
if [ -f "/usr/include/arpa/inet.h" ]; then
#       sleep 1
       OK_OUT;
else
      FAIL_OUT;

fi;

printf "pthread.h"
if [ -f "/usr/include/pthread.h" ]; then
#	sleep 1
	OK_OUT;
else
	FAIL_OUT
fi;

printf "regex.h"
if [ -f "/usr/include/regex.h" ]; then
#	sleep 1
	OK_OUT;
else
	FAIL_OUT
fi;

printf "All depedencies are solved, please do a [%s%bmake%b] to compile the program.\n" "" "$GREEN" "$CLEAR";
